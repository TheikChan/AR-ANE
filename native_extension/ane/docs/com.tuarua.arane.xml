<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua.arane"><apiName>com.tuarua.arane</apiName><apiDetail/><apiClassifier id="com.tuarua.arane:Configuration"><apiName>Configuration</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:Configuration:Configuration"><apiName>Configuration</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arane:Configuration:isLightEstimationEnabled:get"><apiName>isLightEstimationEnabled</apiName><shortdesc> Enable or disable light estimation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true </apiDefaultValue></apiValueDef><apiDesc> Enable or disable light estimation.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Configuration:worldAlignment:get"><apiName>worldAlignment</apiName><shortdesc> Determines how the coordinate system should be aligned with the world.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>WorldAlignment.gravity </apiDefaultValue></apiValueDef><apiDesc> Determines how the coordinate system should be aligned with the world.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:NodeReference"><apiName>NodeReference</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:NodeReference:NodeReference"><apiName>NodeReference</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arane:NodeReference:removeAllActions"><apiName>removeAllActions</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:NodeReference:runAction"><apiName>runAction</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>action</apiItemName><apiOperationClassifier>com.tuarua.arane.animation:Action</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arane:NodeReference:protected:_isAdded"><apiName>_isAdded</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:NodeReference:protected:_name"><apiName>_name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:NodeReference:protected:_parentName"><apiName>_parentName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:NodeReference:isAdded:get"><apiName>isAdded</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:NodeReference:name:get"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:NodeReference:parentName:get"><apiName>parentName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:Node"><apiName>Node</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arane:NodeReference</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:Node:Node"><apiName>Node</apiName><shortdesc> Node is the model class for node-tree objects.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>geometry</apiItemName><apiType value="any"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam></apiConstructorDef><apiDesc> Node is the model class for node-tree objects.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arane:Node:addChildNode"><apiName>addChildNode</apiName><shortdesc> Add child node.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiOperationClassifier>com.tuarua.arane:Node</apiOperationClassifier><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc> Add child node.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:Node:childNode"><apiName>childNode</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.arane:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>nodeName</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:Node:removeChildNodes"><apiName>removeChildNodes</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:Node:removeFromParentNode"><apiName>removeFromParentNode</apiName><shortdesc> Removes the node from the childNodes array of the receiver’s parentNode.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Removes the node from the childNodes array of the receiver’s parentNode.</apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arane:Node:alpha:get"><apiName>alpha</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:castsShadow:get"><apiName>castsShadow</apiName><shortdesc> Determines if the node is rendered in shadow maps.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true </apiDefaultValue></apiValueDef><apiDesc> Determines if the node is rendered in shadow maps.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:categoryBitMask:get"><apiName>categoryBitMask</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:childNodes:get"><apiName>childNodes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Vector$com.tuarua.arane:Node"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:eulerAngles:get"><apiName>eulerAngles</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:geometry:get"><apiName>geometry</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:light:get"><apiName>light</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arane.lights:Light</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:physicsBody:get"><apiName>physicsBody</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arane.physics:PhysicsBody</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:position:get"><apiName>position</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:scale:get"><apiName>scale</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:transform:get"><apiName>transform</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Matrix3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Node:visible:get"><apiName>visible</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:ReferenceImageSet"><apiName>ReferenceImageSet</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:ReferenceImageSet:ReferenceImageSet"><apiName>ReferenceImageSet</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arane:ReferenceImageSet:groupName"><apiName>groupName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:FocusSquare"><apiName>FocusSquare</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:FocusSquare:FocusSquare"><apiName>FocusSquare</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>primaryColor</apiItemName><apiType value="uint"/><apiData>0xFFFFCC00</apiData></apiParam><apiParam><apiItemName>fillColor</apiItemName><apiType value="uint"/><apiData>0xFFFFEC69</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arane:FocusSquare:hide"><apiName>hide</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:FocusSquare:show"><apiName>show</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arane:FocusSquare:enabled:get"><apiName>enabled</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:FocusSquare:fillColor:get"><apiName>fillColor</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:FocusSquare:position:get"><apiName>position</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:FocusSquare:primaryColor:get"><apiName>primaryColor</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:FocusSquare:isInited:set"><apiName>isInited</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:DebugOptions"><apiName>DebugOptions</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arane:DebugOptions:renderAsWireframe"><apiName>renderAsWireframe</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>64</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showBoundingBoxes"><apiName>showBoundingBoxes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showCameras"><apiName>showCameras</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1024</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showConstraints"><apiName>showConstraints</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>512</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showCreases"><apiName>showCreases</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>256</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showFeaturePoints"><apiName>showFeaturePoints</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1073741824</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showLightExtents"><apiName>showLightExtents</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showLightInfluences"><apiName>showLightInfluences</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showPhysicsFields"><apiName>showPhysicsFields</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showPhysicsShapes"><apiName>showPhysicsShapes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showSkeletons"><apiName>showSkeletons</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>128</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showWireframe"><apiName>showWireframe</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>32</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:DebugOptions:showWorldOrigin"><apiName>showWorldOrigin</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>18446744071562067968</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:PlaneAnchorClassification"><apiName>PlaneAnchorClassification</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arane:PlaneAnchorClassification:ceiling"><apiName>ceiling</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchorClassification:floor"><apiName>floor</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchorClassification:none"><apiName>none</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchorClassification:seat"><apiName>seat</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchorClassification:table"><apiName>table</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchorClassification:wall"><apiName>wall</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:PlaneAnchor"><apiName>PlaneAnchor</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arane:Anchor</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:PlaneAnchor:PlaneAnchor"><apiName>PlaneAnchor</apiName><shortdesc> Creates a new anchor object with the specified transform.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiData>null</apiData></apiParam></apiConstructorDef><apiDesc> Creates a new anchor object with the specified transform. </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arane:PlaneAnchor:equals"><apiName>equals</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>planeAnchor</apiItemName><apiOperationClassifier>com.tuarua.arane:PlaneAnchor</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arane:PlaneAnchor:alignment"><apiName>alignment</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchor:center"><apiName>center</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchor:classification"><apiName>classification</apiName><shortdesc> Classification of the plane.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="uint"/></apiValueDef><apiDesc> Classification of the plane. iOS 12.0+ </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchor:extent"><apiName>extent</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchor:isClassificationSupported:get"><apiName>isClassificationSupported</apiName><shortdesc>
     Determines whether plane classification is supported on this device.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Determines whether plane classification is supported on this device.
     Plane classification is available only on iPhone XS, iPhone XS Max, and iPhone XR.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:ImageAnchor"><apiName>ImageAnchor</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arane:Anchor</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:ImageAnchor:ImageAnchor"><apiName>ImageAnchor</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arane:ImageAnchor:equals"><apiName>equals</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>imageAnchor</apiItemName><apiOperationClassifier>com.tuarua.arane:ImageAnchor</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arane:ImageAnchor:height"><apiName>height</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:ImageAnchor:name"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:ImageAnchor:width"><apiName>width</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:ReferenceObject"><apiName>ReferenceObject</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:ReferenceObject:ReferenceObject"><apiName>ReferenceObject</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arane:ReferenceObject:center"><apiName>center</apiName><shortdesc>
     The center of the object in the object’s local coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef><apiDesc>
     The center of the object in the object’s local coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:ReferenceObject:extent"><apiName>extent</apiName><shortdesc>
     The extent of the object in the object’s local coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef><apiDesc>
     The extent of the object in the object’s local coordinate space.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:ReferenceObject:name"><apiName>name</apiName><shortdesc>
     An optional name used to identify the object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
     An optional name used to identify the object.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:ReferenceObject:scale"><apiName>scale</apiName><shortdesc>
     The scale of the object’s local coordinate space.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Vector3D"/></apiValueDef><apiDesc>
     The scale of the object’s local coordinate space.
     <p>Multiplying the extent by this scale will result in the physical extent of the object, measured in meters.</p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:PlaneDetection"><apiName>PlaneDetection</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arane:PlaneDetection:horizontal"><apiName>horizontal</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneDetection:none"><apiName>none</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneDetection:vertical"><apiName>vertical</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:AntialiasingMode"><apiName>AntialiasingMode</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arane:AntialiasingMode:multisampling2X"><apiName>multisampling2X</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:AntialiasingMode:multisampling4X"><apiName>multisampling4X</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:AntialiasingMode:none"><apiName>none</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:WorldAlignment"><apiName>WorldAlignment</apiName><shortdesc>
 Enum constants for indicating the world alignment.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Enum constants for indicating the world alignment.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.arane:WorldAlignment:camera"><apiName>camera</apiName><shortdesc> Aligns the world with the camera’s orientation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc> Aligns the world with the camera’s orientation. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:WorldAlignment:gravityAndHeading"><apiName>gravityAndHeading</apiName><shortdesc> Aligns the world with gravity that is defined by the vector (0, -1, 0)
     and heading (w.r.t.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc> Aligns the world with gravity that is defined by the vector (0, -1, 0)
     and heading (w.r.t. True North) that is given by the vector (0, 0, -1). </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:WorldAlignment:gravity"><apiName>gravity</apiName><shortdesc> Aligns the world with gravity that is defined by vector (0, -1, 0).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc> Aligns the world with gravity that is defined by vector (0, -1, 0). </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:Camera"><apiName>Camera</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:Camera:Camera"><apiName>Camera</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arane:Camera:averageGray:get"><apiName>averageGray</apiName><shortdesc> Determines the average gray level desired in the final image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.18 </apiDefaultValue></apiValueDef><apiDesc> Determines the average gray level desired in the final image.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Camera:exposureOffset:get"><apiName>exposureOffset</apiName><shortdesc> Determines the logarithimc exposure biasing, in EV.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0. </apiDefaultValue></apiValueDef><apiDesc> Determines the logarithimc exposure biasing, in EV.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Camera:maximumExposure:get"><apiName>maximumExposure</apiName><shortdesc> Determines the maximum exposure offset of the adaptation, in EV.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>-15 </apiDefaultValue></apiValueDef><apiDesc> Determines the maximum exposure offset of the adaptation, in EV.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Camera:minimumExposure:get"><apiName>minimumExposure</apiName><shortdesc> Determines the minimum exposure offset of the adaptation, in EV.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>-15 </apiDefaultValue></apiValueDef><apiDesc> Determines the minimum exposure offset of the adaptation, in EV.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Camera:name:get"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Camera:position:get"><apiName>position</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Vector3D"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Camera:wantsHDR:get"><apiName>wantsHDR</apiName><shortdesc> Determines if the receiver has a high dynamic range.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false. </apiDefaultValue></apiValueDef><apiDesc> Determines if the receiver has a high dynamic range.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Camera:whitePoint:get"><apiName>whitePoint</apiName><shortdesc> Determines the smallest luminance level that will be mapped to white in the final image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1 </apiDefaultValue></apiValueDef><apiDesc> Determines the smallest luminance level that will be mapped to white in the final image.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:PlaneAnchorAlignment"><apiName>PlaneAnchorAlignment</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arane:PlaneAnchorAlignment:horizontal"><apiName>horizontal</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchorAlignment:vertical"><apiName>vertical</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:WorldTrackingConfiguration"><apiName>WorldTrackingConfiguration</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arane:Configuration</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:WorldTrackingConfiguration:WorldTrackingConfiguration"><apiName>WorldTrackingConfiguration</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arane:WorldTrackingConfiguration:detectionImages:get"><apiName>detectionImages</apiName><shortdesc> Images to detect in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arane:ReferenceImageSet</apiValueClassifier></apiValueDef><apiDesc> Images to detect in the scene.
     
     <p>If set the session will attempt to detect the specified images.
     When an image is detected an ARImageAnchor will be added to the session. </p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:WorldTrackingConfiguration:detectionObjects:get"><apiName>detectionObjects</apiName><shortdesc>
     Objects to detect in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arane:ReferenceObjectSet</apiValueClassifier></apiValueDef><apiDesc>
     Objects to detect in the scene.
     <p>If set the session will attempt to detect the specified objects.
     When an object is detected an ARObjectAnchor will be added to the session.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:WorldTrackingConfiguration:environmentTexturing:get"><apiName>environmentTexturing</apiName><shortdesc>
     The mode of environment texturing to run.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
     The mode of environment texturing to run.
     <p>If set, texture information will be accumulated and updated. Adding an AREnvironmentProbeAnchor to the session
     will get the current environment texture available from that probe's perspective which can be used for lighting
     virtual objects in the scene. Defaults to EnvironmentTexturing.none.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:WorldTrackingConfiguration:initialWorldMap:get"><apiName>initialWorldMap</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.filesystem:File"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:WorldTrackingConfiguration:isAutoFocusEnabled:get"><apiName>isAutoFocusEnabled</apiName><shortdesc> Enable or disable continuous auto focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>to true.
     </apiDefaultValue></apiValueDef><apiDesc> Enable or disable continuous auto focus. iOS 11.3+.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:WorldTrackingConfiguration:maximumNumberOfTrackedImages:get"><apiName>maximumNumberOfTrackedImages</apiName><shortdesc>
     Maximum number of images to track simultaneously.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
     Maximum number of images to track simultaneously.
     <p> Setting the maximum number of tracked images will limit the number of images that can be tracked in a given frame.
     If more than the maximum is visible, only the images already being tracked will continue to track until tracking is lost or another image is removed.
     Images will continue to be detected regardless of images tracked. Default value is zero.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:WorldTrackingConfiguration:planeDetection:get"><apiName>planeDetection</apiName><shortdesc> Type of planes to detect in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>to single item array of PlaneDetection.none.
     </apiDefaultValue></apiValueDef><apiDesc> Type of planes to detect in the scene.
     
     <p>If set, new planes will continue to be detected and updated over time. Detected planes will be
     added to the session as ARPlaneAnchor objects. In the event that two planes are merged, the newer
     plane will be removed. </p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:ObjectAnchor"><apiName>ObjectAnchor</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arane:Anchor</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:ObjectAnchor:ObjectAnchor"><apiName>ObjectAnchor</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arane:ObjectAnchor:equals"><apiName>equals</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>objectAnchor</apiItemName><apiOperationClassifier>com.tuarua.arane:ObjectAnchor</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arane:ObjectAnchor:referenceObject"><apiName>referenceObject</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiValueClassifier>com.tuarua.arane:ReferenceObject</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:AR2DView"><apiName>AR2DView</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:AR2DView:AR2DView"><apiName>AR2DView</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.arane:Scene"><apiName>Scene</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arane:Scene:lightingEnvironment:get"><apiName>lightingEnvironment</apiName><shortdesc> lighting environment </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arane.materials:MaterialProperty</apiValueClassifier></apiValueDef><apiDesc> lighting environment </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Scene:physicsWorld:get"><apiName>physicsWorld</apiName><shortdesc> physics world </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arane.physics:PhysicsWorld</apiValueClassifier></apiValueDef><apiDesc> physics world </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Scene:rootNode:get"><apiName>rootNode</apiName><shortdesc> root node </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arane:Node</apiValueClassifier></apiValueDef><apiDesc> root node </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:PlaneAnchorClassificationStatus"><apiName>PlaneAnchorClassificationStatus</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arane:PlaneAnchorClassificationStatus:notAvailable"><apiName>notAvailable</apiName><shortdesc> Plane classification is currently unavailable.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc> Plane classification is currently unavailable. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchorClassificationStatus:undetermined"><apiName>undetermined</apiName><shortdesc> ARKit has not yet determined the classification of this plane.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc> ARKit has not yet determined the classification of this plane. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:PlaneAnchorClassificationStatus:unknown"><apiName>unknown</apiName><shortdesc> ARKit is confident the plane is not any of the known classes.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc> ARKit is confident the plane is not any of the known classes. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:Anchor"><apiName>Anchor</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:Anchor:Anchor"><apiName>Anchor</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arane:Anchor:id:get"><apiName>id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:Anchor:transform:get"><apiName>transform</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Matrix3D"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:ReferenceObjectSet"><apiName>ReferenceObjectSet</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:ReferenceObjectSet:ReferenceObjectSet"><apiName>ReferenceObjectSet</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arane:ReferenceObjectSet:groupName"><apiName>groupName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:ImageTrackingConfiguration"><apiName>ImageTrackingConfiguration</apiName><shortdesc>
 A configuration for running image tracking.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.arane:Configuration</apiBaseClassifier></apiClassifierDef><apiDesc>
 A configuration for running image tracking.
 <p>Image tracking provides 6 degrees of freedom tracking of known images. Four images may be tracked simultaneously.
 iOS 12.0+.</p>
 </apiDesc></apiClassifierDetail><apiConstructor id="com.tuarua.arane:ImageTrackingConfiguration:ImageTrackingConfiguration"><apiName>ImageTrackingConfiguration</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.arane:ImageTrackingConfiguration:isAutoFocusEnabled:get"><apiName>isAutoFocusEnabled</apiName><shortdesc> Enable or disable continuous auto focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>to true.
     </apiDefaultValue></apiValueDef><apiDesc> Enable or disable continuous auto focus.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:ImageTrackingConfiguration:maximumNumberOfTrackedImages:get"><apiName>maximumNumberOfTrackedImages</apiName><shortdesc>
     Maximum number of images to track simultaneously.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
     Maximum number of images to track simultaneously.
     <p>Setting the maximum number of tracked images will limit the number of images that can be tracked in a given frame.
     If more than the maximum is visible, only the images already being tracked will continue to track until tracking is lost or another image is removed.
     Default value is one.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:ImageTrackingConfiguration:trackingImages:get"><apiName>trackingImages</apiName><shortdesc>
     Images to track in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arane:ReferenceImageSet</apiValueClassifier></apiValueDef><apiDesc>
     Images to track in the scene.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:EnvironmentTexturing"><apiName>EnvironmentTexturing</apiName><shortdesc>
 Enum constants for indicating the mode of environment texturing to run.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Enum constants for indicating the mode of environment texturing to run.
 </apiDesc></apiClassifierDetail><apiValue id="com.tuarua.arane:EnvironmentTexturing:automatic"><apiName>automatic</apiName><shortdesc> Texture information is gathered for the environment and probes automatically placed in the scene.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc> Texture information is gathered for the environment and probes automatically placed in the scene. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:EnvironmentTexturing:manual"><apiName>manual</apiName><shortdesc> Texture information is gathered for the environment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc> Texture information is gathered for the environment.
     Environment textures will be generated for AREnvironmentProbes added to the session. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:EnvironmentTexturing:none"><apiName>none</apiName><shortdesc> No texture information is gathered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc> No texture information is gathered. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:RenderingAPI"><apiName>RenderingAPI</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arane:RenderingAPI:auto"><apiName>auto</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:RenderingAPI:metal"><apiName>metal</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:RenderingAPI:openGLES2"><apiName>openGLES2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:RunOptions"><apiName>RunOptions</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.arane:RunOptions:removeExistingAnchors"><apiName>removeExistingAnchors</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:RunOptions:resetTracking"><apiName>resetTracking</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:AR3DView"><apiName>AR3DView</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:AR3DView:AR3DView"><apiName>AR3DView</apiName><shortdesc> private </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> private </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arane:AR3DView:dispose"><apiName>dispose</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:AR3DView:hitTest3D"><apiName>hitTest3D</apiName><shortdesc> Searches the current frame for objects corresponding to a point in the view.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc></apiDesc><apiOperationClassifier>com.tuarua.arane.touch:ARHitTestResult</apiOperationClassifier></apiReturn><apiParam><apiItemName>touchPoint</apiItemName><apiType value="flash.geom:Point"/><apiDesc>A point in the view’s coordinate system.
     </apiDesc></apiParam><apiParam><apiItemName>types</apiItemName><apiType value="Array"/><apiDesc>The types of results to search for.
     </apiDesc></apiParam></apiOperationDef><apiDesc> Searches the current frame for objects corresponding to a point in the view.
     <p>A 2D point in the view’s coordinate space can refer to any point along a line segment in
     the 3D coordinate space. Hit-testing is the process of finding objects in the world located
     along this line segment.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:AR3DView:hitTest"><apiName>hitTest</apiName><shortdesc> Searches the current frame for objects corresponding to a point in the view.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc></apiDesc><apiOperationClassifier>com.tuarua.arane.touch:HitTestResult</apiOperationClassifier></apiReturn><apiParam><apiItemName>touchPoint</apiItemName><apiType value="flash.geom:Point"/><apiDesc>A point in the view’s coordinate system.
     </apiDesc></apiParam><apiParam><apiItemName>options</apiItemName><apiOperationClassifier>com.tuarua.arane.touch:HitTestOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc> Searches the current frame for objects corresponding to a point in the view.
     <p>A 2D point in the view’s coordinate space can refer to any point along a line segment in
     the 3D coordinate space. Hit-testing is the process of finding objects in the world located
     along this line segment.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:AR3DView:init"><apiName>init</apiName><shortdesc> Initialise the ARSCN view.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc></apiDesc><apiType value="void"/></apiReturn><apiParam><apiItemName>frame</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>mask</apiItemName><apiType value="flash.display:BitmapData"/><apiData>null</apiData><apiDesc>An Optional bitmapdata which masks the airView. This allows us to use our AIR stage as UI over
     the ARKit view
     </apiDesc></apiParam></apiOperationDef><apiDesc> Initialise the ARSCN view.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:AR3DView:isNodeInsidePointOfView"><apiName>isNodeInsidePointOfView</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiOperationClassifier>com.tuarua.arane:Node</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:AR3DView:node"><apiName>node</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.arane:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>anchor</apiItemName><apiOperationClassifier>com.tuarua.arane:Anchor</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.arane:AR3DView:antialiasingMode:get"><apiName>antialiasingMode</apiName><shortdesc> </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/><apiDefaultValue>AntialiasingMode.none </apiDefaultValue></apiValueDef><apiDesc> </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:AR3DView:autoenablesDefaultLighting:get"><apiName>autoenablesDefaultLighting</apiName><shortdesc> Specifies whether the receiver should automatically light up scenes that have no light source.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false</apiDefaultValue></apiValueDef><apiDesc> Specifies whether the receiver should automatically light up scenes that have no light source.
     
     <p>When enabled, a diffuse light is automatically added and placed while rendering scenes that
     have no light or only ambient lights.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:AR3DView:automaticallyUpdatesLighting:get"><apiName>automaticallyUpdatesLighting</apiName><shortdesc> Determines whether the view will update the scene’s lighting.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true </apiDefaultValue></apiValueDef><apiDesc> Determines whether the view will update the scene’s lighting.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:AR3DView:camera:get"><apiName>camera</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arane:Camera</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:AR3DView:debugOptions:get"><apiName>debugOptions</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:AR3DView:focusSquare:get"><apiName>focusSquare</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>com.tuarua.arane:FocusSquare</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:AR3DView:scene:get"><apiName>scene</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arane:Scene</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:AR3DView:session:get"><apiName>session</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.arane:Session</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.arane:AR3DView:showsStatistics:get"><apiName>showsStatistics</apiName><shortdesc> Determines whether the receiver should display statistics info like FPS.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false </apiDefaultValue></apiValueDef><apiDesc> Determines whether the receiver should display statistics info like FPS.
     <p>When set to true, statistics are displayed in a overlay on top of the rendered scene.</p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.arane:Session"><apiName>Session</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.arane:Session:Session"><apiName>Session</apiName><shortdesc> private </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> private </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.arane:Session:add"><apiName>add</apiName><shortdesc> Adds an anchor to the session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>anchor</apiItemName><apiOperationClassifier>com.tuarua.arane:Anchor</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> Adds an anchor to the session. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:Session:com.tuarua.arane:createReferenceObject"><apiName>createReferenceObject</apiName><shortdesc>
     Creates a new reference object from scanned features within the provided bounds.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiDesc>The transformation matrix that defines the rotation and translation of the bounds in
     world coordinates. This will be used as the reference object's transform, defining its coordinate space.
     </apiDesc></apiParam><apiParam><apiItemName>center</apiItemName><apiType value="flash.geom:Vector3D"/><apiDesc>The center of the object's bounds in the transform's coordinate space. A zero vector will
     define the object's origin centered within its extent.
     </apiDesc></apiParam><apiParam><apiItemName>extent</apiItemName><apiType value="flash.geom:Vector3D"/><apiDesc>The extent of the object's bounds in the transform's coordinate space. This defines the bounds'
     size in each dimension.
     </apiDesc></apiParam><apiParam><apiItemName>completionHandler</apiItemName><apiType value="Function"/><apiDesc>The completion handler to call when the creation has completed. This handler is executed
     on the session's delegate queue. The completion handler takes the following parameters:
     referenceObject - The reference object created or null if unavailable.
     error - An error that indicates why creation failed, or null if a reference object was provided.
     iOS 12.0+
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Creates a new reference object from scanned features within the provided bounds.
     <p>Reference objects can be stored and used to track 3D objects from previously scanned data.
     Creation requires that an ObjectScanningConfiguration is used so that sufficient features are scanned.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:Session:pause"><apiName>pause</apiName><shortdesc> Pauses the session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Pauses the session.
     
     <p>Once paused, no more updates will be received from the
     session until run is called again.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:Session:remove"><apiName>remove</apiName><shortdesc> Removes an anchor to the session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>anchorId</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Removes an anchor to the session. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:Session:run"><apiName>run</apiName><shortdesc> Runs the session with the provided configuration and options.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>configuration</apiItemName><apiOperationClassifier>com.tuarua.arane:Configuration</apiOperationClassifier><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>options</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc> Runs the session with the provided configuration and options.
     
     <p>Calling run on a session that has already started will
     transition immediately to using the new configuration. Options
     can be used to alter the default behavior when transitioning configurations.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:Session:saveCurrentWorldMap"><apiName>saveCurrentWorldMap</apiName><shortdesc>
     Copies the current state of the world being tracked by the session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>file</apiItemName><apiType value="flash.filesystem:File"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>completionHandler</apiItemName><apiType value="Function"/><apiDesc>The completion handler to call when the get has completed. This handler is executed
     on the session's delegate queue. The completion handler takes the following parameters:
     worldMap - The current world map or nil if unavailable.
     error - An error that indicates why the world map is unavailable, or null if a world map was provided.
     iOS 12.0+
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Copies the current state of the world being tracked by the session.
     <p> A world map is only provided when running an ARWorldTrackingConfiguration.</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.arane:Session:setWorldOriginSession"><apiName>setWorldOriginSession</apiName><shortdesc> Sets the world origin of the session to be at the position and orientation
     specified by the provided transform.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>relativeTransform</apiItemName><apiType value="flash.geom:Matrix3D"/><apiDesc>The rotation, translation and scale from the current world origin
     to the desired world origin.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc> Sets the world origin of the session to be at the position and orientation
     specified by the provided transform. iOS 11.3+
     
     </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage>